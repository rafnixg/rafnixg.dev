{"componentChunkName":"component---src-templates-post-js","path":"/crea-tu-blog-con-python-usando-github-pages-y-pelican/","result":{"data":{"ghostPost":{"id":"Ghost__Post__5f330dd9c6b819e6351398d6","title":"Crea tu blog con python usando GitHub Pages y Pelican","slug":"crea-tu-blog-con-python-usando-github-pages-y-pelican","featured":false,"feature_image":"https://images.unsplash.com/photo-1522542550221-31fd19575a2d?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Cuando comenc√© a darle vuelta a la idea de empezar un blog de nuevo me vinieron\nmuchas ideas de como hacerlo a la mente, como el de usar el famoso Wordpress\n[https://wordpress.org], teniendo en cuenta que el blog lo quer√≠a hacer para\nhablar un poco de python y las tecnolog√≠as que iba a ir conociendo y aprendiendo\ndecid√≠ mejor usar Pelican ya que esta desarrollado en Python.\n\n¬øQu√© es Pelican?\nPelican [https://blog.getpelican.com/] es un generador de sitios est√°ticos\ndesarrollado en python que nos","custom_excerpt":null,"visibility":"public","created_at_pretty":"22 July, 2020","published_at_pretty":"18 May, 2019","updated_at_pretty":"22 July, 2020","created_at":"2020-07-22T14:03:32.000-05:00","published_at":"2019-05-18T14:06:00.000-05:00","updated_at":"2020-07-22T14:07:27.000-05:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Rafnix Guzm√°n","slug":"rafnix","bio":null,"profile_image":"//www.gravatar.com/avatar/5fb1357b705cbfd44fbbe63c7395c57c?s=250&d=mm&r=x","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Rafnix Guzm√°n","slug":"rafnix","bio":null,"profile_image":"//www.gravatar.com/avatar/5fb1357b705cbfd44fbbe63c7395c57c?s=250&d=mm&r=x","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"python","slug":"python","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"python","slug":"python","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"github","slug":"github","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Cuando comenc√© a darle vuelta a la idea de empezar un blog de nuevo me vinieron\nmuchas ideas de como hacerlo a la mente, como el de usar el famoso Wordpress\n[https://wordpress.org], teniendo en cuenta que el blog lo quer√≠a hacer para\nhablar un poco de python y las tecnolog√≠as que iba a ir conociendo y aprendiendo\ndecid√≠ mejor usar Pelican ya que esta desarrollado en Python.\n\n¬øQu√© es Pelican?\nPelican [https://blog.getpelican.com/] es un generador de sitios est√°ticos\ndesarrollado en python que nos permite escribir los post en archivos escritos en\nreStructuredText, Markdown, o AsciiDoc, y estos ser√°n luego procesados para\ngenerar un sitio web est√°tico como este blog, por lo que no necesitaremos una\nbase de datos ni un servidor web que soporte un lenguaje de Backend como lo es\nGitHub Pages.\n\n¬øQu√© es GitHub Pages?\nGitHub Pages [https://pages.github.com/] es un hosting de sitios est√°ticos y\ncomo su pagina web lo indica, esta dise√±ado para hostear directamente en un\nrepositorio de GitHub la pagina web de nuestros proyecto, paginas personales o\nde organizaciones, ademas de ser un servicio gratuito.\n\nGracias a estas caracter√≠sticas, podemos f√°cilmente crear nuestros sitios\nest√°ticos y subirlos a un repositorio de GitHub que debe tener la siguiente\nestructura username.github.io mas adelante indicare como crear y configurar el\nrepositorio para que pueda servir nuestro sitio web.\n\nGitHub recomienda el uso de Jekyll [https://jekyllrb.com/] para generar nuestros\nsitios est√°ticos, pero este esta hecho en Ruby, lo que no es un problema si usas\nRuby pero yo al ser un #PythonLover decid√≠ usar Pelican que esta desarrollado en\nPython.\n\nCreando nuestro repositorio en GitHub\nEsta parte es la mas sencilla de post, ya que solo debemos entrar a nuestra\ncuenta de GitHub y crear un nuevo repositorio publico, que tenga el siguiente\nnombre.\n\ntu_username.github.io, en mi caso el repositorio donde se aloja este blog se\nllama rafnixg.github.io [https://rafnixg.github.io]\n\nSolo con esto ya tendremos nuestro Github Pages listo para comenzar a subir\nnuestro contenido est√°tico.\n\nInstalando y configurando Pelican\nInstalar y tener Pelican funcionando es super sencillo. Pero si les quiero\nrecomendar que toda la instalaci√≥n se haga en un entorno virtual usando Pipenv,\npara mantener separado esta instalaci√≥n de los dem√°s paquetes de Python que\ntengan instalados en sus sistema, si no saben como usar Pipenv ac√° les dejo un\npost que tengo sobre este tema, Entornos virtuales en Python usando Pipenv.\n\nAntes de iniciar con la instalaci√≥n de pelican, debemos clonar nuestro\nrepositorio donde esta hosteada nuestro blog, para esto solo debemos ubicarnos\nsonde queramos tener nuestro proyecto, en este caso yo lo har√© en la ra√≠z de mi\nsistema.\n\n$ cd ~\n$ git clone https://github.com/tu_username/tu_username.github.io.git\n$ cd tu_username.github.io\n\n\nLuego de esto, procedemos a instalar nuestro Pelican, lo primero que debemos\nhacer es crear un nuevo branch llamado source donde ira todo nuestro c√≥digo\nfuente y librer√≠as, ya que para GitHub todo lo que este en la rama master es lo\nque sera servido, para nuestro inter√©s solo debemos subir a master lo que\npelican genera en su carpeta output, pero mas adelante nos preocuparemos de\nesto.\n\n$ git checkout -b source\n$ pipenv shell\n\n\nCon esto ya tendremos nuestro entorno virtual para nuestra instalaci√≥n de\npelican, ahora procedemos a instalar pelican que es nuestro generador de sitios\nest√°ticos, markdown que nos ayudara para escribir nuestros post usando este\nlenguaje y ghp-import que nos ayuda a publicar nuestro sitio a GitHub.\n\n$ pipenv install pelican markdown ghp-import\n\nInstalling pelican‚Ä¶\nAdding pelican to Pipfile's [packages]‚Ä¶\n‚úî Installation Succeeded \nInstalling markdown‚Ä¶\nAdding markdown to Pipfile's [packages]‚Ä¶\n‚úî Installation Succeeded \nInstalling ghp-import‚Ä¶\nAdding ghp-import to Pipfile's [packages]‚Ä¶\n‚úî Installation Succeeded \nPipfile.lock not found, creating‚Ä¶\nLocking [dev-packages] dependencies‚Ä¶\nLocking [packages] dependencies‚Ä¶\n‚úî Success! \nUpdated Pipfile.lock (b0c318)!\nInstalling dependencies from Pipfile.lock (b0c318)‚Ä¶\n  üêç   ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 13/13 ‚Äî \n\n\nYa con esto tenemos todo listo para empezar a usar Pelican as√≠ que creemos\nnuestro primer blog us√°ndolo.\n\n$ pelican-quickstart\n\nWelcome to pelican-quickstart v4.0.1.\n\nThis script will help you create a new Pelican-based website.\n\nPlease answer the following questions so this script can generate the files\nneeded by Pelican.\n    \nUsing project associated with current virtual environment.Will save to:\n/home/username/blog/pelican\n\n> What will be the title of this web site? prueba pelican\n> Who will be the author of this web site? rafnix guzman\n> What will be the default language of this web site? [es] es\n> Do you want to specify a URL prefix? e.g., https://example.com   (Y/n) n\n> Do you want to enable article pagination? (Y/n) y\n> How many articles per page do you want? [10] \n> What is your time zone? [Europe/Paris] America/Lima\n> Do you want to generate a tasks.py/Makefile to automate generation and publishing? (Y/n) Y **# Responder Y, esto nos ayuda mucho!**\n> Do you want to upload your website using FTP? (y/N) n\n> Do you want to upload your website using SSH? (y/N) n\n> Do you want to upload your website using Dropbox? (y/N) n\n> Do you want to upload your website using S3? (y/N) n\n> Do you want to upload your website using Rackspace Cloud Files? (y/N) n\n> Do you want to upload your website using GitHub Pages? (y/N) y\n> Is this your personal page (username.github.io)? (y/N) y\nDone. Your new project is available at /home/username/blog/pelican\n\n\nSi tienen alguna duda respecto a la zona horaria ac√° les dejo una lista con\ntodas las zonas horarias\n[https://en.wikipedia.org/wiki/List_of_tz_database_time_zones]\n\n> Do you want to generate a tasks.py/Makefile to automate generation and publishing? (Y/n)\n\n\nA esta pregunta deben responder (Y), ya que este Makefile nos ayudara a generar\nnuestro sitio de forma mas f√°cil, como podemos ver ya con esto se nos ha\ngenerado nuestro proyecto de pelican con el que podemos empezar a trabajar.\n\nEscribiendo nuestro primer post\nVamos a crear nuestro primer post, para esto nos debemos ubicar en la carpeta \ncontent y con nuestro editor de texto favorito procedemos a crear un archivo\nllamado hola-mundo.md (si, lo se, la imaginaci√≥n esta a la orden del d√≠a), este\narchivo luego puede ser borrado es solo para pruebas.\n\nTitle: Hola Mundo\nDate: 2019-05-18 10:30\nModified: 2019-05-18 11:30\nCategory: blog\nTags: principal, otros\nSlug: hola-mundo\nAuthors: Rafnix Guzm√°n\nSummary: Mi primer post usando Pelican y GitHub Pages\n\nAca pueden empezar a escribir todo lo que quieran pueden agregar todas las sintaxis de *Markdown* que deseen.\n\n## T√≠tulo\n### Subt√≠tulo\nEste es un ejemplo de texto que da entrada a una lista gen√©rica de elementos:\n\n- Elemento 1\n- Elemento 2\n- Elemento 3\n\nEste es un ejemplo de texto que da entrada a una lista numerada:\n\n1. Elemento 1\n2. Elemento 2\n3. Elemento 3\n\nAl texto en Markdown puedes a√±adirle formato como **negrita** o *cursiva* de una manera muy sencilla.\n\nTodo esto fue extra√≠do de este [Post sobre markdown](https://markdown.es/sintaxis-markdown/)\n\n\nProbando nuestro blog en local\nLuego de escribir y guardar su primer post, procedemos a generar un servidor de\npruebas para ver nuestro resultado antes de subir nuestra web a GitHub, estando\nen la ra√≠z de nuestro proyecto ejecutamos el siguiente comando.\n\n$ make devserver\n\npelican -lr /home/username/blog/pelican/content -o /home/username/blog/pelican/output -s /home/username/blog/pelican/pelicanconf.py \n\n-> Modified: content, theme, settings. re-generating...\nDone: Processed 1 article, 0 drafts, 0 pages, 0 hidden pages and 0 draft pages in 0.15 seconds.\n\n\nPara entrar a nuestro servidor local de pruebas debemos ingresar a la siguiente\nURL http://localhost:8000 con nuestro explorador favorito(espero no se IE, xD)\n\nHola mundo pelicanSubir nuestro blog a GitHub Pages\nYa con esto procederemos a preparar todo para subir lo a github, este primer\ncomando sube nuestro c√≥digo fuente.\n\n$ git add -A && git commit -a -m 'post hola-mundo.md' && git push --all\n\n\nAhora subimos todo a la rama master, recuerdan que les dije que no se\npreocuparan por esto, es debido a que este comando hace toda esta preparaci√≥n de\nsubir todo lo que se encuentra en la carpeta output a nuestra rama master\n\n$ make github\n\n\nAc√° se les preguntaran sus credenciales de github, para poder subir a su\nrepositorio todo el sitio est√°tico ya generado, con esto su blog estar√°\nfuncionando en https://su_username.github.io/\n\nPara el pr√≥ximo post veremos como configurar un Thema y algunos Plugins para\npotenciar el funcionamiento de Pelican, ademas de unas configuraciones extra que\nnos ayudaran a tener mejor SEO.\n\nNos vemos en el proximo post, muchas gracias por leerme y cualquier duda,\ncomentario, o lo que sea, lo pueden dejar por aca o por mi cuenta de Twitter \n@rafnixg [https://twitter.com/rafnixg].","html":"<p>Cuando comenc√© a darle vuelta a la idea de empezar un blog de nuevo me vinieron muchas ideas de como hacerlo a la mente, como el de usar el famoso <a href=\"https://wordpress.org\">Wordpress</a>, teniendo en cuenta que el blog lo quer√≠a hacer para hablar un poco de python y las tecnolog√≠as que iba a ir conociendo y aprendiendo decid√≠ mejor usar Pelican ya que esta desarrollado en Python.</p><h2 id=\"-qu-es-pelican\">¬øQu√© es Pelican?</h2><p><a href=\"https://blog.getpelican.com/\">Pelican</a> es un generador de sitios est√°ticos desarrollado en python que nos permite escribir los post en archivos escritos en reStructuredText, Markdown, o AsciiDoc, y estos ser√°n luego procesados para generar un sitio web est√°tico como este blog, por lo que no necesitaremos una base de datos ni un servidor web que soporte un lenguaje de Backend como lo es GitHub Pages.</p><h2 id=\"-qu-es-github-pages\">¬øQu√© es GitHub Pages?</h2><p><a href=\"https://pages.github.com/\">GitHub Pages</a> es un hosting de sitios est√°ticos y como su pagina web lo indica, esta dise√±ado para hostear directamente en un repositorio de GitHub la pagina web de nuestros proyecto, paginas personales o de organizaciones, ademas de ser un servicio gratuito.</p><p>Gracias a estas caracter√≠sticas, podemos f√°cilmente crear nuestros sitios est√°ticos y subirlos a un repositorio de GitHub que debe tener la siguiente estructura <code>username.github.io</code> mas adelante indicare como crear y configurar el repositorio para que pueda servir nuestro sitio web.</p><p>GitHub recomienda el uso de <a href=\"https://jekyllrb.com/\">Jekyll</a> para generar nuestros sitios est√°ticos, pero este esta hecho en Ruby, lo que no es un problema si usas Ruby pero yo al ser un #PythonLover decid√≠ usar Pelican que esta desarrollado en Python.</p><h2 id=\"creando-nuestro-repositorio-en-github\">Creando nuestro repositorio en GitHub</h2><p>Esta parte es la mas sencilla de post, ya que solo debemos entrar a nuestra cuenta de GitHub y crear un nuevo repositorio publico, que tenga el siguiente nombre.</p><p><code>tu_username.github.io</code>, en mi caso el repositorio donde se aloja este blog se llama <a href=\"https://rafnixg.github.io\">rafnixg.github.io</a></p><p>Solo con esto ya tendremos nuestro Github Pages listo para comenzar a subir nuestro contenido est√°tico.</p><h2 id=\"instalando-y-configurando-pelican\">Instalando y configurando Pelican</h2><p>Instalar y tener Pelican funcionando es super sencillo. Pero si les quiero recomendar que toda la instalaci√≥n se haga en un entorno virtual usando Pipenv, para mantener separado esta instalaci√≥n de los dem√°s paquetes de Python que tengan instalados en sus sistema, si no saben como usar Pipenv ac√° les dejo un post que tengo sobre este tema, <a>Entornos virtuales en Python usando Pipenv</a>.</p><p>Antes de iniciar con la instalaci√≥n de pelican, debemos clonar nuestro repositorio donde esta hosteada nuestro blog, para esto solo debemos ubicarnos sonde queramos tener nuestro proyecto, en este caso yo lo har√© en la ra√≠z de mi sistema.</p><pre><code class=\"language-bash\">$ cd ~\n$ git clone https://github.com/tu_username/tu_username.github.io.git\n$ cd tu_username.github.io\n</code></pre><p>Luego de esto, procedemos a instalar nuestro Pelican, lo primero que debemos hacer es crear un nuevo branch llamado <code>source</code> donde ira todo nuestro c√≥digo fuente y librer√≠as, ya que para GitHub todo lo que este en la rama <code>master</code> es lo que sera servido, para nuestro inter√©s solo debemos subir a <code>master</code> lo que pelican genera en su carpeta output, pero mas adelante nos preocuparemos de esto.</p><pre><code class=\"language-sh\">$ git checkout -b source\n$ pipenv shell\n</code></pre><p>Con esto ya tendremos nuestro entorno virtual para nuestra instalaci√≥n de pelican, ahora procedemos a instalar <code>pelican</code> que es nuestro generador de sitios est√°ticos, <code>markdown</code> que nos ayudara para escribir nuestros post usando este lenguaje y <code>ghp-import</code> que nos ayuda a publicar nuestro sitio a GitHub.</p><pre><code class=\"language-sh\">$ pipenv install pelican markdown ghp-import\n\nInstalling pelican‚Ä¶\nAdding pelican to Pipfile's [packages]‚Ä¶\n‚úî Installation Succeeded \nInstalling markdown‚Ä¶\nAdding markdown to Pipfile's [packages]‚Ä¶\n‚úî Installation Succeeded \nInstalling ghp-import‚Ä¶\nAdding ghp-import to Pipfile's [packages]‚Ä¶\n‚úî Installation Succeeded \nPipfile.lock not found, creating‚Ä¶\nLocking [dev-packages] dependencies‚Ä¶\nLocking [packages] dependencies‚Ä¶\n‚úî Success! \nUpdated Pipfile.lock (b0c318)!\nInstalling dependencies from Pipfile.lock (b0c318)‚Ä¶\n  üêç   ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 13/13 ‚Äî \n</code></pre><p>Ya con esto tenemos todo listo para empezar a usar Pelican as√≠ que creemos nuestro primer blog us√°ndolo.</p><pre><code class=\"language-sh\">$ pelican-quickstart\n\nWelcome to pelican-quickstart v4.0.1.\n\nThis script will help you create a new Pelican-based website.\n\nPlease answer the following questions so this script can generate the files\nneeded by Pelican.\n    \nUsing project associated with current virtual environment.Will save to:\n/home/username/blog/pelican\n\n&gt; What will be the title of this web site? prueba pelican\n&gt; Who will be the author of this web site? rafnix guzman\n&gt; What will be the default language of this web site? [es] es\n&gt; Do you want to specify a URL prefix? e.g., https://example.com   (Y/n) n\n&gt; Do you want to enable article pagination? (Y/n) y\n&gt; How many articles per page do you want? [10] \n&gt; What is your time zone? [Europe/Paris] America/Lima\n&gt; Do you want to generate a tasks.py/Makefile to automate generation and publishing? (Y/n) Y **# Responder Y, esto nos ayuda mucho!**\n&gt; Do you want to upload your website using FTP? (y/N) n\n&gt; Do you want to upload your website using SSH? (y/N) n\n&gt; Do you want to upload your website using Dropbox? (y/N) n\n&gt; Do you want to upload your website using S3? (y/N) n\n&gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) n\n&gt; Do you want to upload your website using GitHub Pages? (y/N) y\n&gt; Is this your personal page (username.github.io)? (y/N) y\nDone. Your new project is available at /home/username/blog/pelican\n</code></pre><p>Si tienen alguna duda respecto a la zona horaria ac√° les dejo una lista con todas las <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">zonas horarias</a></p><pre><code class=\"language-sh\">&gt; Do you want to generate a tasks.py/Makefile to automate generation and publishing? (Y/n)\n</code></pre><p>A esta pregunta deben responder (Y), ya que este Makefile nos ayudara a generar nuestro sitio de forma mas f√°cil, como podemos ver ya con esto se nos ha generado nuestro proyecto de pelican con el que podemos empezar a trabajar.</p><h2 id=\"escribiendo-nuestro-primer-post\">Escribiendo nuestro primer post</h2><p>Vamos a crear nuestro primer post, para esto nos debemos ubicar en la carpeta <code>content</code> y con nuestro editor de texto favorito procedemos a crear un archivo llamado hola-mundo.md (si, lo se, la imaginaci√≥n esta a la orden del d√≠a), este archivo luego puede ser borrado es solo para pruebas.</p><pre><code class=\"language-markdown\">Title: Hola Mundo\nDate: 2019-05-18 10:30\nModified: 2019-05-18 11:30\nCategory: blog\nTags: principal, otros\nSlug: hola-mundo\nAuthors: Rafnix Guzm√°n\nSummary: Mi primer post usando Pelican y GitHub Pages\n\nAca pueden empezar a escribir todo lo que quieran pueden agregar todas las sintaxis de *Markdown* que deseen.\n\n## T√≠tulo\n### Subt√≠tulo\nEste es un ejemplo de texto que da entrada a una lista gen√©rica de elementos:\n\n- Elemento 1\n- Elemento 2\n- Elemento 3\n\nEste es un ejemplo de texto que da entrada a una lista numerada:\n\n1. Elemento 1\n2. Elemento 2\n3. Elemento 3\n\nAl texto en Markdown puedes a√±adirle formato como **negrita** o *cursiva* de una manera muy sencilla.\n\nTodo esto fue extra√≠do de este [Post sobre markdown](https://markdown.es/sintaxis-markdown/)\n</code></pre><h2 id=\"probando-nuestro-blog-en-local\">Probando nuestro blog en local</h2><p>Luego de escribir y guardar su primer post, procedemos a generar un servidor de pruebas para ver nuestro resultado antes de subir nuestra web a GitHub, estando en la ra√≠z de nuestro proyecto ejecutamos el siguiente comando.</p><pre><code class=\"language-sh\">$ make devserver\n\npelican -lr /home/username/blog/pelican/content -o /home/username/blog/pelican/output -s /home/username/blog/pelican/pelicanconf.py \n\n-&gt; Modified: content, theme, settings. re-generating...\nDone: Processed 1 article, 0 drafts, 0 pages, 0 hidden pages and 0 draft pages in 0.15 seconds.\n</code></pre><p>Para entrar a nuestro servidor local de pruebas debemos ingresar a la siguiente URL <a href=\"http://localhost:8000\">http://localhost:8000</a> con nuestro explorador favorito(espero no se IE, xD)</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2020/07/hola-mundo-pelican.jpg\" class=\"kg-image\" alt=\"Hola mundo Pelican\" srcset=\"http://localhost:2368/content/images/size/w600/2020/07/hola-mundo-pelican.jpg 600w, http://localhost:2368/content/images/2020/07/hola-mundo-pelican.jpg 944w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Hola mundo pelican</figcaption></figure><h2 id=\"subir-nuestro-blog-a-github-pages\">Subir nuestro blog a GitHub Pages</h2><p>Ya con esto procederemos a preparar todo para subir lo a github, este primer comando sube nuestro c√≥digo fuente.</p><pre><code class=\"language-bash\">$ git add -A &amp;&amp; git commit -a -m 'post hola-mundo.md' &amp;&amp; git push --all\n</code></pre><p>Ahora subimos todo a la rama <code>master</code>, recuerdan que les dije que no se preocuparan por esto, es debido a que este comando hace toda esta preparaci√≥n de subir todo lo que se encuentra en la carpeta <code>output</code> a nuestra rama <code>master</code></p><pre><code class=\"language-bash\">$ make github\n</code></pre><p>Ac√° se les preguntaran sus credenciales de github, para poder subir a su repositorio todo el sitio est√°tico ya generado, con esto su blog estar√° funcionando en https://su_username.github.io/</p><p>Para el pr√≥ximo post veremos como configurar un <code>Thema</code> y algunos <code>Plugins</code> para potenciar el funcionamiento de Pelican, ademas de unas configuraciones extra que nos ayudaran a tener mejor SEO.</p><p>Nos vemos en el proximo post, muchas gracias por leerme y cualquier duda, comentario, o lo que sea, lo pueden dejar por aca o por mi cuenta de Twitter <a href=\"https://twitter.com/rafnixg\">@rafnixg</a>.</p>","url":"http://localhost:2368/crea-tu-blog-con-python-usando-github-pages-y-pelican/","canonical_url":null,"uuid":"c96bd5a6-1290-473e-a000-3bd5293463ec","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5f188d842f13451cfdfd9302","reading_time":6}},"pageContext":{"slug":"crea-tu-blog-con-python-usando-github-pages-y-pelican"}},"staticQueryHashes":["176528973","2358152166","2561578252","2731221146","4145280475"]}